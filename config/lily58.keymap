/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        kl_escape {
            bindings = <&kp ESC>;
            key-positions = <32 33>;
            layers = <2>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <36 49>;
        };

        combos_left_bottom {
            bindings = <&kp KP_NUMBER_1>;
            key-positions = <37 38>;
            layers = <7>;
        };

        combos_left_bottom2 {
            bindings = <&kp KP_NUMBER_2>;
            key-positions = <37 39>;
            layers = <7>;
        };

        combos_left_bottom3 {
            bindings = <&kp KP_NUMBER_3>;
            key-positions = <37 40>;
            layers = <7>;
        };

        combos_left_bottom4 {
            bindings = <&kp KP_NUMBER_4>;
            key-positions = <38 39>;
            layers = <7>;
        };

        combos_left_bottom5 {
            bindings = <&kp KP_NUMBER_5>;
            key-positions = <38 40>;
            layers = <7>;
        };

        combos_left_bottom6 {
            bindings = <&kp KP_NUMBER_6>;
            key-positions = <39 40>;
            layers = <7>;
        };

        combos_left_bottom7 {
            bindings = <&kp KP_NUMBER_7>;
            key-positions = <37 38 39>;
            layers = <7>;
        };

        combos_left_bottom8 {
            bindings = <&kp KP_NUMBER_8>;
            key-positions = <39 40 38>;
            layers = <7>;
        };

        combos_left_bottom9 {
            bindings = <&kp KP_NUMBER_9>;
            key-positions = <40 39 37 38>;
            layers = <7>;
        };

        combos_left_bottom_minus {
            bindings = <&kp KP_SUBTRACT>;
            key-positions = <37 39 40>;
            layers = <7>;
        };

        combos_left_bottom_plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <37 38 40>;
            layers = <7>;
        };

        combos_left_bottom_toggle {
            bindings = <&tog 7>;
            key-positions = <37 38 39 40>;
            layers = <4>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <43 44 55 54 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 45 46 47 48 49 56 57 6 18 30>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <43 44 55 54 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 45 46 47 48 49 56 57 6 18 30>;
        };

        caps_word: caps_word {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE MINUS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        right_to_left {
            bindings = <
&kp GRAVE  &kp N0    &kp N9   &kp N8     &kp N7  &kp N6                    &trans  &trans  &trans  &trans  &trans  &trans
&kp MINUS  &kp P     &kp O    &kp I      &kp U   &kp Y                     &trans  &trans  &trans  &trans  &trans  &trans
&kp SQT    &kp SEMI  &kp L    &kp K      &kp J   &kp H                     &trans  &trans  &trans  &trans  &trans  &trans
&kp RSHFT  &kp FSLH  &kp DOT  &kp COMMA  &kp M   &kp N   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &trans     &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6       &kp N7        &kp N8        &kp N9        &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans       &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT   &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans       &trans        &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                        &kp N6  &kp N7    &kp N8      &kp N9   &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                         &kp Y   &kp U     &kp I       &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                         &kp H   &kp J     &kp K       &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B   &kp F24      &trans   &kp N   &kp M     &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &kp LGUI  &mo 3   &kp SPACE    &kp RET  &mo 1   &kp BSPC  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans        &trans        &trans            &trans      &trans                        &trans     &trans     &trans     &trans    &trans    &trans
&kp F1     &kp F2        &kp F3        &kp F4            &kp F5      &kp F6                        &kp F7     &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH          &kp DOLLAR  &kp PRCNT                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT  &trans    &trans  &trans     &kp MINUS  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                       &mo 4             &trans      &trans      &trans    &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        edit_layers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &tog 5  &trans                    &trans  &trans  &tog 6  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        lower_layer_right_to_left {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        kl_escape {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        combos_left_bottom {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        right_to_left {
            if-layers = <5 3>;
            then-layer = <0>;
        };
    };
};
